{"version":3,"file":"unit-fns.cjs.development.js","sources":["../src/lib/constants.ts","../src/lib/unary.ts","../src/lib/core.ts","../src/lib/number.ts","../src/lib/binary.ts","../src/lib/ternary.ts","../src/lib/other.ts","../src/index.ts"],"sourcesContent":["export const HALF_PI = Math.PI / 2\nexport const TWO_PI = Math.PI * 2\n","import { Unit } from './core'\nimport { HALF_PI } from './constants'\n\nexport const bounce = (x: Unit): Unit => {\n  const n1 = 7.5625\n  const d1 = 2.75\n\n  if (x < 1 / d1) {\n    return n1 * x * x\n  } else if (x < 2 / d1) {\n    const a = x - 1.5 / d1\n    return n1 * a * a + 0.75\n  } else if (x < 2.5 / d1) {\n    const a = x - 2.25 / d1\n    return n1 * a * a + 0.9375\n  } else {\n    const a = x - 2.625 / d1\n    return n1 * a * a + 0.984375\n  }\n}\n\nexport const sine = (x: Unit): Unit => {\n  return Math.sin(x * HALF_PI)\n}\n\nexport const cosine = (x: Unit): Unit => {\n  return Math.cos(x * HALF_PI)\n}\n\nexport const triangle = (x: Unit): Unit => {\n  return 1 - Math.abs(x * 2 - 1)\n}\n\nexport const center = (x: Unit): Unit => {\n  return Math.abs(x * 2 - 1)\n}\n\nexport const circular = (x: Unit): Unit => {\n  return 1 - Math.sqrt(1 - Math.pow(x, 2))\n}\n\nexport const invert = (x: Unit): Unit => {\n  return 1 - x\n}\n\nexport const exponential = (x: Unit): Unit => {\n  return x === 0 ? 0 : Math.pow(2, 10 * x - 10)\n}\n\nexport const linear = (x: Unit): Unit => {\n  return x\n}\n\nexport const quadratic = (x: Unit): Unit => {\n  return x * x\n}\n\nexport const cubic = (x: Unit): Unit => {\n  return x * x * x\n}\n\nexport const quartic = (x: Unit): Unit => {\n  return x * x * x * x\n}\n\nexport const quintic = (x: Unit): Unit => {\n  return x * x * x * x * x\n}\n","export type Unit = number\n\nexport const isUnit = (value: number): value is Unit => {\n  return value >= 0 && value <= 1\n}\n\nexport const unitMax = 1\nexport const unitMin = 0\n","import { Unit, isUnit } from '../lib/core'\n\nimport { HALF_PI } from './constants'\n\nexport const clip = (value: number): Unit => {\n  return Math.max(0, Math.min(1, value))\n}\n\nexport const degreesToUnit = (degrees: number): Unit => {\n  return wrap(degrees / 360)\n}\n\nexport const fraction = (value: number): Unit => {\n  return 1 / value\n}\n\nexport const fractional = (value: number): Unit => {\n  return Math.abs(value % 1)\n}\n\nexport const mapRange = (\n  inMin: number,\n  inMax: number,\n  outMin: number,\n  outMax: number,\n  value: number\n): number => {\n  return ((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n}\n\nexport const mapToUnit = (\n  inMin: number,\n  inMax: number,\n  value: number\n): Unit => {\n  return mapRange(inMin, inMax, 0, 1, value)\n}\n\nexport const radiansToUnit = (radians: number): Unit => {\n  return wrap(radians / HALF_PI)\n}\n\nexport const toIndex = (length: number, unit: Unit): number => {\n  return Math.floor(unit * (length - 1))\n}\n\nexport const wrap = (value: number): Unit => {\n  if (isUnit(value)) return value\n\n  return value < 0 ? 1 - (-value % 1) : value % 1\n}\n\nexport const wrapInclusive = (value: number): Unit => {\n  if (isUnit(value)) return value\n\n  if (value % 1 === 0) return 1\n\n  return value < 0 ? 1 - (-value % 1) : value % 1\n}\n","import { Unit } from './core'\nimport { radiansToUnit, wrapInclusive } from './number'\nimport { unitMax } from './core'\nimport { unitMin } from './core'\n\n// TODO: the reverse\nexport const angle = (x: Unit, y: Unit): Unit => {\n  return radiansToUnit(Math.atan(y / x))\n}\n\nexport const distance = (x: Unit, y: Unit): Unit => {\n  return Math.sqrt(x * x + y * y) / Math.SQRT2\n}\n\nexport const maximum = Math.max as (x: Unit, y: Unit) => Unit\n\nexport const minimum = Math.min as (x: Unit, y: Unit) => Unit\n\nexport const offset = (amount: Unit, unit: Unit): Unit => {\n  return wrapInclusive(amount + unit)\n}\n\nexport const peak = (peak: Unit, unit: Unit): Unit => {\n  return unit < peak ? unit / peak : ((unit - peak) * -1) / (1 - peak) + 1\n}\n\n// TODO: is this unit and should it be in this dir?\nexport const radial = (x: number, y: number) => {\n  return 1 - distance(x * 2 - 1, y * 2 - 1)\n}\n\nexport const repeat = (scale: Unit, t: Unit): Unit => {\n  const times = 1 / scale\n  return (t * times) % 1\n}\n\nexport const threshold = (threshold: Unit, t: Unit): Unit => {\n  return t < threshold ? unitMin : unitMax\n}\n\nexport const multiply = (a: number, b: number) => {\n  return a * b\n}\nexport const screen = (a: number, b: number) => {\n  return 1 - (1 - a) * (1 - b)\n}\nexport const darken = (a: number, b: number) => {\n  return Math.min(a, b)\n}\nexport const lighten = (a: number, b: number) => {\n  return Math.max(a, b)\n}\nexport const difference = (a: number, b: number) => {\n  return Math.abs(a - b)\n}\nexport const exclusion = (a: number, b: number) => {\n  return a + b - 2 * a * b\n}\nexport const overlay = (a: number, b: number) => {\n  return a < 0.5 ? 2.0 * a * b : 1.0 - 2.0 * (1.0 - a) * (1.0 - b)\n}\nexport const hardLight = (a: number, b: number) => {\n  return b < 0.5 ? 2.0 * a * b : 1.0 - 2.0 * (1.0 - a) * (1.0 - b)\n}\nexport const softLight = (a: number, b: number) => {\n  return b < 0.5\n    ? 2.0 * a * b + a * a * (1.0 - 2.0 * b)\n    : Math.sqrt(a) * (2.0 * b - 1.0) + 2.0 * a * (1.0 - b)\n}\nexport const colorDodge = (a: number, b: number) => {\n  return a / (1.0 - b)\n}\nexport const linearDodge = (a: number, b: number) => {\n  return a + b\n}\nexport const burn = (a: number, b: number) => {\n  return 1.0 - (1 - a) / b\n}\nexport const linearBurn = (a: number, b: number) => {\n  return a + b - 1.0\n}\n","import { Unit } from 'lib/core'\n\nexport const clamp = (min: Unit, max: Unit, val: Unit): Unit => {\n  return val > max ? max : val < min ? min : val\n}\n\nexport const mix = (outMin: Unit, outMax: Unit, unit: Unit): Unit => {\n  return outMin * (1 - unit) + outMax * unit\n}\n\n// TODO: rename to step\nexport const toggle = (a: Unit, b: Unit, t: Unit): Unit => {\n  return t < 0.5 ? a : b\n}\n","import { Unit, unitMax } from './core'\nimport { repeat } from './binary'\nimport { fraction, toIndex } from './number'\n\nexport const branch = (\n  a: (unit: Unit) => Unit,\n  b: (unit: Unit) => Unit,\n  unit: Unit\n) => {\n  return unit > 0.5 ? b(unit) : a(unit)\n}\n\nexport const fit = (fns: Array<(unit: Unit) => Unit>, unit: Unit): Unit => {\n  const fnsLength = fns.length\n  const t = repeat(fraction(fnsLength), unit)\n  const fn = fns[toIndex(fnsLength, unit)]\n\n  return fn(t)\n}\n\nexport const fitSteps = (steps: Array<Unit>, unit: Unit): Unit => {\n  return steps[toIndex(steps.length, unit)]\n}\n\nexport const createBands = (fn: typeof Math.round) => (\n  fraction: Unit,\n  value: Unit\n): Unit => {\n  if (fraction === 0) return value\n\n  const bands = unitMax / fraction\n\n  return fn(value * bands) / bands\n}\n\nexport const quantize = createBands(Math.floor)\n\nexport const sampleUnaryFn = (\n  length: number,\n  onSample: (unit: Unit) => Unit\n) => {\n  const lookupTable = Array(length)\n\n  for (let i = 0; i < length; i++) {\n    lookupTable[i] = onSample(i / length)\n  }\n  return lookupTable\n}\n\nexport const lookup = <T>(unit: Unit, lookupTable: Array<T>): T => {\n  return lookupTable[toIndex(lookupTable.length, unit)]\n}\n\nexport const createTiles = (\n  gridX: number,\n  gridY: number,\n  fn3d: (x: Unit, y: Unit, z: Unit) => Unit\n) => {\n  const fractionX = 1 / gridX\n  const fractionY = 1 / gridY\n\n  const frac = 2 / (gridX + gridY)\n\n  return (x: Unit, y: Unit): Unit => {\n    const z = quantize(fractionY, y) + quantize(fractionX, x) * frac\n    return fn3d(repeat(fractionX, x), repeat(fractionY, y), z)\n  }\n}\n","import * as _unary from './lib/unary'\nimport * as _binary from './lib/binary'\nimport * as _ternary from './lib/ternary'\nexport const unary = _unary\nexport const binary = _binary\nexport const ternary = _ternary\n\nexport * from './lib/core'\nexport * from './lib/unary'\nexport * from './lib/binary'\nexport * from './lib/ternary'\nexport * from './lib/number'\nexport * from './lib/other'\n\n// TODO:\n// https://iquilezles.org/articles/functions/\n// http://www.flong.com/archive/texts/code/shapers_poly/\n// http://www.flong.com/archive/texts/code/shapers_exp/\n// http://www.flong.com/archive/texts/code/shapers_circ/\n"],"names":["HALF_PI","Math","PI","bounce","x","n1","d1","a","sine","sin","cosine","cos","triangle","abs","center","circular","sqrt","pow","invert","exponential","linear","quadratic","cubic","quartic","quintic","isUnit","value","unitMax","unitMin","clip","max","min","degreesToUnit","degrees","wrap","fraction","fractional","mapRange","inMin","inMax","outMin","outMax","mapToUnit","radiansToUnit","radians","toIndex","length","unit","floor","wrapInclusive","angle","y","atan","distance","SQRT2","maximum","minimum","offset","amount","peak","radial","repeat","scale","t","times","threshold","multiply","b","screen","darken","lighten","difference","exclusion","overlay","hardLight","softLight","colorDodge","linearDodge","burn","linearBurn","clamp","val","mix","toggle","branch","fit","fns","fnsLength","fn","fitSteps","steps","createBands","bands","quantize","sampleUnaryFn","onSample","lookupTable","Array","i","lookup","createTiles","gridX","gridY","fn3d","fractionX","fractionY","frac","z","unary","_unary","binary","_binary","ternary","_ternary"],"mappings":"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"}