{"version":3,"file":"unit-fns.cjs.production.min.js","sources":["../src/lib/constants.ts","../src/lib/unary.ts","../src/lib/core.ts","../src/lib/number.ts","../src/lib/binary.ts","../src/lib/ternary.ts","../src/lib/other.ts","../src/index.ts"],"sourcesContent":["export const HALF_PI = Math.PI / 2\nexport const TWO_PI = Math.PI * 2\n","import { Unit } from './core'\nimport { HALF_PI } from './constants'\n\nexport const bounce = (x: Unit): Unit => {\n  const n1 = 7.5625\n  const d1 = 2.75\n\n  if (x < 1 / d1) {\n    return n1 * x * x\n  } else if (x < 2 / d1) {\n    const a = x - 1.5 / d1\n    return n1 * a * a + 0.75\n  } else if (x < 2.5 / d1) {\n    const a = x - 2.25 / d1\n    return n1 * a * a + 0.9375\n  } else {\n    const a = x - 2.625 / d1\n    return n1 * a * a + 0.984375\n  }\n}\n\nexport const sine = (x: Unit): Unit => {\n  return Math.sin(x * HALF_PI)\n}\n\nexport const cosine = (x: Unit): Unit => {\n  return Math.cos(x * HALF_PI)\n}\n\nexport const triangle = (x: Unit): Unit => {\n  return 1 - Math.abs(x * 2 - 1)\n}\n\nexport const center = (x: Unit): Unit => {\n  return Math.abs(x * 2 - 1)\n}\n\nexport const circular = (x: Unit): Unit => {\n  return 1 - Math.sqrt(1 - Math.pow(x, 2))\n}\n\nexport const invert = (x: Unit): Unit => {\n  return 1 - x\n}\n\nexport const exponential = (x: Unit): Unit => {\n  return x === 0 ? 0 : Math.pow(2, 10 * x - 10)\n}\n\nexport const linear = (x: Unit): Unit => {\n  return x\n}\n\nexport const quadratic = (x: Unit): Unit => {\n  return x * x\n}\n\nexport const cubic = (x: Unit): Unit => {\n  return x * x * x\n}\n\nexport const quartic = (x: Unit): Unit => {\n  return x * x * x * x\n}\n\nexport const quintic = (x: Unit): Unit => {\n  return x * x * x * x * x\n}\n","export type Unit = number\n\nexport const isUnit = (value: number): value is Unit => {\n  return value >= 0 && value <= 1\n}\n\nexport const unitMax = 1\nexport const unitMin = 0\n","import { Unit, isUnit } from '../lib/core'\n\nimport { HALF_PI } from './constants'\n\nexport const clip = (value: number): Unit => {\n  return Math.max(0, Math.min(1, value))\n}\n\nexport const degreesToUnit = (degrees: number): Unit => {\n  return wrap(degrees / 360)\n}\n\nexport const fraction = (value: number): Unit => {\n  return 1 / value\n}\n\nexport const fractional = (value: number): Unit => {\n  return Math.abs(value % 1)\n}\n\nexport const mapRange = (\n  inMin: number,\n  inMax: number,\n  outMin: number,\n  outMax: number,\n  value: number\n): number => {\n  return ((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n}\n\nexport const mapToUnit = (\n  inMin: number,\n  inMax: number,\n  value: number\n): Unit => {\n  return mapRange(inMin, inMax, 0, 1, value)\n}\n\nexport const radiansToUnit = (radians: number): Unit => {\n  return wrap(radians / HALF_PI)\n}\n\nexport const toIndex = (length: number, unit: Unit): number => {\n  return Math.floor(unit * (length - 1))\n}\n\nexport const wrap = (value: number): Unit => {\n  if (isUnit(value)) return value\n\n  return value < 0 ? 1 - (-value % 1) : value % 1\n}\n\nexport const wrapInclusive = (value: number): Unit => {\n  if (isUnit(value)) return value\n\n  if (value % 1 === 0) return 1\n\n  return value < 0 ? 1 - (-value % 1) : value % 1\n}\n","import { Unit } from './core'\nimport { radiansToUnit, wrapInclusive } from './number'\nimport { unitMax } from './core'\nimport { unitMin } from './core'\n\n// TODO: the reverse\nexport const angle = (x: Unit, y: Unit): Unit => {\n  return radiansToUnit(Math.atan(y / x))\n}\n\nexport const distance = (x: Unit, y: Unit): Unit => {\n  return Math.sqrt(x * x + y * y) / Math.SQRT2\n}\n\nexport const maximum = Math.max as (x: Unit, y: Unit) => Unit\n\nexport const minimum = Math.min as (x: Unit, y: Unit) => Unit\n\nexport const offset = (amount: Unit, unit: Unit): Unit => {\n  return wrapInclusive(amount + unit)\n}\n\nexport const peak = (peak: Unit, unit: Unit): Unit => {\n  return unit < peak ? unit / peak : ((unit - peak) * -1) / (1 - peak) + 1\n}\n\n// TODO: is this unit and should it be in this dir?\nexport const radial = (x: number, y: number) => {\n  return 1 - distance(x * 2 - 1, y * 2 - 1)\n}\n\nexport const repeat = (scale: Unit, t: Unit): Unit => {\n  const times = 1 / scale\n  return (t * times) % 1\n}\n\nexport const threshold = (threshold: Unit, t: Unit): Unit => {\n  return t < threshold ? unitMin : unitMax\n}\n\nexport const multiply = (a: number, b: number) => {\n  return a * b\n}\nexport const screen = (a: number, b: number) => {\n  return 1 - (1 - a) * (1 - b)\n}\nexport const darken = (a: number, b: number) => {\n  return Math.min(a, b)\n}\nexport const lighten = (a: number, b: number) => {\n  return Math.max(a, b)\n}\nexport const difference = (a: number, b: number) => {\n  return Math.abs(a - b)\n}\nexport const exclusion = (a: number, b: number) => {\n  return a + b - 2 * a * b\n}\nexport const overlay = (a: number, b: number) => {\n  return a < 0.5 ? 2.0 * a * b : 1.0 - 2.0 * (1.0 - a) * (1.0 - b)\n}\nexport const hardLight = (a: number, b: number) => {\n  return b < 0.5 ? 2.0 * a * b : 1.0 - 2.0 * (1.0 - a) * (1.0 - b)\n}\nexport const softLight = (a: number, b: number) => {\n  return b < 0.5\n    ? 2.0 * a * b + a * a * (1.0 - 2.0 * b)\n    : Math.sqrt(a) * (2.0 * b - 1.0) + 2.0 * a * (1.0 - b)\n}\nexport const colorDodge = (a: number, b: number) => {\n  return a / (1.0 - b)\n}\nexport const linearDodge = (a: number, b: number) => {\n  return a + b\n}\nexport const burn = (a: number, b: number) => {\n  return 1.0 - (1 - a) / b\n}\nexport const linearBurn = (a: number, b: number) => {\n  return a + b - 1.0\n}\n","import { Unit } from 'lib/core'\n\nexport const clamp = (min: Unit, max: Unit, val: Unit): Unit => {\n  return val > max ? max : val < min ? min : val\n}\n\nexport const mix = (outMin: Unit, outMax: Unit, unit: Unit): Unit => {\n  return outMin * (1 - unit) + outMax * unit\n}\n\n// TODO: rename to step\nexport const toggle = (a: Unit, b: Unit, t: Unit): Unit => {\n  return t < 0.5 ? a : b\n}\n","import { Unit, unitMax } from './core'\nimport { repeat } from './binary'\nimport { fraction, toIndex } from './number'\n\nexport const branch = (\n  a: (unit: Unit) => Unit,\n  b: (unit: Unit) => Unit,\n  unit: Unit\n) => {\n  return unit > 0.5 ? b(unit) : a(unit)\n}\n\nexport const fit = (fns: Array<(unit: Unit) => Unit>, unit: Unit): Unit => {\n  const fnsLength = fns.length\n  const t = repeat(fraction(fnsLength), unit)\n  const fn = fns[toIndex(fnsLength, unit)]\n\n  return fn(t)\n}\n\nexport const fitSteps = (steps: Array<Unit>, unit: Unit): Unit => {\n  return steps[toIndex(steps.length, unit)]\n}\n\nexport const createBands = (fn: typeof Math.round) => (\n  fraction: Unit,\n  value: Unit\n): Unit => {\n  if (fraction === 0) return value\n\n  const bands = unitMax / fraction\n\n  return fn(value * bands) / bands\n}\n\nexport const quantize = createBands(Math.floor)\n\nexport const sampleUnaryFn = (\n  length: number,\n  onSample: (unit: Unit) => Unit\n) => {\n  const lookupTable = Array(length)\n\n  for (let i = 0; i < length; i++) {\n    lookupTable[i] = onSample(i / length)\n  }\n  return lookupTable\n}\n\nexport const lookup = <T>(unit: Unit, lookupTable: Array<T>): T => {\n  return lookupTable[toIndex(lookupTable.length, unit)]\n}\n\nexport const createTiles = (\n  gridX: number,\n  gridY: number,\n  fn3d: (x: Unit, y: Unit, z: Unit) => Unit\n) => {\n  const fractionX = 1 / gridX\n  const fractionY = 1 / gridY\n\n  const frac = 2 / (gridX + gridY)\n\n  return (x: Unit, y: Unit): Unit => {\n    const z = quantize(fractionY, y) + quantize(fractionX, x) * frac\n    return fn3d(repeat(fractionX, x), repeat(fractionY, y), z)\n  }\n}\n","import * as _unary from './lib/unary'\nimport * as _binary from './lib/binary'\nimport * as _ternary from './lib/ternary'\nexport const unary = _unary\nexport const binary = _binary\nexport const ternary = _ternary\n\nexport * from './lib/core'\nexport * from './lib/unary'\nexport * from './lib/binary'\nexport * from './lib/ternary'\nexport * from './lib/number'\nexport * from './lib/other'\n\n// TODO:\n// https://iquilezles.org/articles/functions/\n// http://www.flong.com/archive/texts/code/shapers_poly/\n// http://www.flong.com/archive/texts/code/shapers_exp/\n// http://www.flong.com/archive/texts/code/shapers_circ/\n"],"names":["HALF_PI","Math","PI","bounce","x","n1","d1","a","sine","sin","cosine","cos","triangle","abs","center","circular","sqrt","pow","invert","exponential","linear","quadratic","cubic","quartic","quintic","isUnit","value","fraction","mapRange","inMin","inMax","outMin","outMax","radiansToUnit","radians","wrap","toIndex","length","unit","floor","wrapInclusive","angle","y","atan","distance","SQRT2","maximum","max","minimum","min","offset","amount","peak","radial","repeat","scale","t","threshold","multiply","b","screen","darken","lighten","difference","exclusion","overlay","hardLight","softLight","colorDodge","linearDodge","burn","linearBurn","clamp","val","mix","toggle","createBands","fn","bands","quantize","unary","_unary","binary","_binary","ternary","_ternary","gridX","gridY","fn3d","fractionX","fractionY","frac","z","degrees","fns","fnsLength","steps","lookupTable","onSample","Array","i"],"mappings":"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"}